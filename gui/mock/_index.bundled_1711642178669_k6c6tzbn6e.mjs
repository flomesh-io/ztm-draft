// mock/index.js
var mock_default = [
  {
    type: "post",
    url: "/client/api/login",
    response: () => {
      return {
        token: "XXXXXXX"
      };
    }
  },
  {
    type: "post",
    url: "/server/api/login",
    response: () => {
      return {
        token: "XXXXXXX"
      };
    }
  },
  {
    type: "post",
    url: "/api/login",
    response: () => {
      return {
        token: "XXXXXXX"
      };
    }
  },
  {
    type: "post",
    url: "/client/api",
    response: () => {
      return [];
    }
  },
  {
    type: "get",
    url: "/api/mygateways",
    response: () => {
      return [
        { label: "Dalian Hub", value: "Dalian" },
        { label: "Beijing Hub", value: "Beijing" },
        { label: "Shanghai Hub", value: "Shanghai" }
      ];
    }
  }
];
export {
  mock_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay9pbmRleC5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX19pbmplY3RlZF9maWxlbmFtZV9fID0gXCIvVXNlcnMvbGluZG9uZ2NoZW4vRG9jdW1lbnRzL0hCdWlsZGVyUHJvamVjdHMvenRtL2d1aS9tb2NrL2luZGV4LmpzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIi9Vc2Vycy9saW5kb25nY2hlbi9Eb2N1bWVudHMvSEJ1aWxkZXJQcm9qZWN0cy96dG0vZ3VpL21vY2tcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL1VzZXJzL2xpbmRvbmdjaGVuL0RvY3VtZW50cy9IQnVpbGRlclByb2plY3RzL3p0bS9ndWkvbW9jay9pbmRleC5qc1wiO2V4cG9ydCBkZWZhdWx0IFtcblx0e1xuXHRcdHR5cGU6IFwicG9zdFwiLFxuXHRcdHVybDogXCIvY2xpZW50L2FwaS9sb2dpblwiLFxuXHRcdHJlc3BvbnNlOiAoKSA9PiB7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHR0b2tlbjogXCJYWFhYWFhYXCJcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdHtcblx0XHR0eXBlOiBcInBvc3RcIixcblx0XHR1cmw6IFwiL3NlcnZlci9hcGkvbG9naW5cIixcblx0XHRyZXNwb25zZTogKCkgPT4ge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0dG9rZW46IFwiWFhYWFhYWFwiXG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHR7XG5cdFx0dHlwZTogXCJwb3N0XCIsXG5cdFx0dXJsOiBcIi9hcGkvbG9naW5cIixcblx0XHRyZXNwb25zZTogKCkgPT4ge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0dG9rZW46IFwiWFhYWFhYWFwiXG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHR7XG5cdFx0dHlwZTogXCJwb3N0XCIsXG5cdFx0dXJsOiBcIi9jbGllbnQvYXBpXCIsXG5cdFx0cmVzcG9uc2U6ICgpID0+IHtcblx0XHRcdHJldHVybiBbXVxuXHRcdH1cblx0fSxcblx0e1xuXHRcdHR5cGU6IFwiZ2V0XCIsXG5cdFx0dXJsOiBcIi9hcGkvbXlnYXRld2F5c1wiLFxuXHRcdHJlc3BvbnNlOiAoKSA9PiB7XG5cdFx0XHRyZXR1cm4gW1xuXHRcdFx0XHR7IGxhYmVsOiAnRGFsaWFuIEh1YicsIHZhbHVlOiAnRGFsaWFuJyB9LFxuXHRcdFx0XHR7IGxhYmVsOiAnQmVpamluZyBIdWInLCB2YWx1ZTogJ0JlaWppbmcnIH0sXG5cdFx0XHRcdHsgbGFiZWw6ICdTaGFuZ2hhaSBIdWInLCB2YWx1ZTogJ1NoYW5naGFpJyB9LFxuXHRcdFx0XVxuXHRcdH1cblx0fSxcbl0iXSwKICAibWFwcGluZ3MiOiAiO0FBQWdULElBQU8sZUFBUTtBQUFBLEVBQzlUO0FBQUEsSUFDQyxNQUFNO0FBQUEsSUFDTixLQUFLO0FBQUEsSUFDTCxVQUFVLE1BQU07QUFDZixhQUFPO0FBQUEsUUFDTixPQUFPO0FBQUEsTUFDUjtBQUFBLElBQ0Q7QUFBQSxFQUNEO0FBQUEsRUFDQTtBQUFBLElBQ0MsTUFBTTtBQUFBLElBQ04sS0FBSztBQUFBLElBQ0wsVUFBVSxNQUFNO0FBQ2YsYUFBTztBQUFBLFFBQ04sT0FBTztBQUFBLE1BQ1I7QUFBQSxJQUNEO0FBQUEsRUFDRDtBQUFBLEVBQ0E7QUFBQSxJQUNDLE1BQU07QUFBQSxJQUNOLEtBQUs7QUFBQSxJQUNMLFVBQVUsTUFBTTtBQUNmLGFBQU87QUFBQSxRQUNOLE9BQU87QUFBQSxNQUNSO0FBQUEsSUFDRDtBQUFBLEVBQ0Q7QUFBQSxFQUNBO0FBQUEsSUFDQyxNQUFNO0FBQUEsSUFDTixLQUFLO0FBQUEsSUFDTCxVQUFVLE1BQU07QUFDZixhQUFPLENBQUM7QUFBQSxJQUNUO0FBQUEsRUFDRDtBQUFBLEVBQ0E7QUFBQSxJQUNDLE1BQU07QUFBQSxJQUNOLEtBQUs7QUFBQSxJQUNMLFVBQVUsTUFBTTtBQUNmLGFBQU87QUFBQSxRQUNOLEVBQUUsT0FBTyxjQUFjLE9BQU8sU0FBUztBQUFBLFFBQ3ZDLEVBQUUsT0FBTyxlQUFlLE9BQU8sVUFBVTtBQUFBLFFBQ3pDLEVBQUUsT0FBTyxnQkFBZ0IsT0FBTyxXQUFXO0FBQUEsTUFDNUM7QUFBQSxJQUNEO0FBQUEsRUFDRDtBQUNEOyIsCiAgIm5hbWVzIjogW10KfQo=
